import java.io.Writer;
import java.util.Properties;
import java.util.concurrent.TimeUnit;
import java.util.logging.Logger;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;

import com.google.j2objc.annotations.ReflectionSupport.Level;

public class Function {
	
	static WebDriver driver;
	static Writer report;
	static Properties p = new Properties();
	static String url;
	static String browser;
	
	static void getWebDriver(String browser) {
		Logger.getLogger("").setLevel(Level.OFF);
		String driverPath = "";
		
		if (browser.equalsIgnoreCase("firefox")) {
				if (System.getProperty("os.name").toUpperCase().contains("MAC"))
					driverPath = "./geckodriver";
				else if (System.getProperty("os.name").toUpperCase().contains("Mac"))
					driverPath = "./geckodriver";
				else throw new IllegalArgumentException("Unknown OS");
				System.setProperty("webdriver.gecko.driver", driverPath);
				driver = new FirefoxDriver(); 
				driver.manage().window().maximize();
				driver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
		}
		
}
	static void open(String browser, String url){
		getWebDriver(browser);
		driver.get(url);
		}

	static boolean isElementPresent(By by) {

		driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
		if (!driver.findElements(by).isEmpty()) return true; else return false;}
	
	static String getSize(By by) {

		driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
		if (!driver.findElements(by).isEmpty() && driver.findElement(by).isDisplayed())
			// return driver.findElement(by).getRect().getDimension()
return driver.findElement(by).getSize().toString().replace(", ", "x"); else return "null";}


}

